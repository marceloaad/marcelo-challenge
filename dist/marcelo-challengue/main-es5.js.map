{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/entities-container/entities-container.component.ts","webpack:///src/app/entities-container/entities-container.component.html","webpack:///src/app/material.ts","webpack:///src/app/selection-container/selection-container.component.ts","webpack:///src/app/selection-container/selection-container.component.html","webpack:///src/app/services/annotation.service.ts","webpack:///src/app/services/deselect.service.ts","webpack:///src/app/services/emit-entity.service.ts","webpack:///src/app/services/entity.service.ts","webpack:///src/app/services/text.service.ts","webpack:///src/app/texts-container/texts-container.component.ts","webpack:///src/app/texts-container/texts-container.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","_textService","_annotationService","title","textsLength","textSelection","currentTextIndex","postingAnnotation","getTexts","length","postAnnotation","JSON","parse","stringify","setTimeout","nextTextIndex","previousTextIndex","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","EntitiesContainerComponent","_entityService","_emitEntity","entities","entity","emitEntity","getEntities","MaterialModule","SelectionContainerComponent","_deselect","removeSelection","emitAction","deselectText","AnnotationService","annotationData","Array","observableAnnotations","asObservable","newAnnotation","push","next","Object","assign","console","log","providedIn","DeselectService","_actionSource","action$","action","EmitEntityService","_entitySource","entity$","EntityService","TextService","TextsContainerComponent","_emitEntityService","_deselectService","renderer","injector","cfr","applicationRef","selectedText","texts","currentText","currentEntity","changes","activeSelection","sendSelectedText","textContainer","document","querySelector","textContent","text","subscribe","deselect","textIndex","caretPosition","window","getSelection","getRangeAt","range","createRange","setStart","commonAncestorContainer","startOffset","setEnd","endOffset","doc_id","emitTextSelection","wrap","createElement","factory","resolveComponentFactory","cmp","create","attachView","hostView","contents","extractContents","instance","innerText","content","cloneNode","insertNode","endContainer","pop","node","emit","highlightSelection","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { TextService } from './services/text.service';\nimport { AnnotationService } from './services/annotation.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent implements OnInit {\n  title = 'MarceloChallengue';\n  public textsLength: number = 0;\n  public textSelection: object = null;\n  public currentTextIndex: number = 0;\n  public postingAnnotation: boolean = false;\n\n  constructor(\n    private _textService: TextService,\n    private _annotationService: AnnotationService\n  ) { }\n\n  ngOnInit(): void {\n    this.textsLength = this._textService.getTexts().length;\n  }\n  /**\n   * Sends a JSON Object wich contains the data of the text selected to the Annotation Service.\n   */\n  postAnnotation() {\n    if (this.textSelection !== null) {\n      this.postingAnnotation = true;\n      this._annotationService.postAnnotation(JSON.parse(JSON.stringify(this.textSelection)));\n      this.textSelection = null;\n      setTimeout(() => this.postingAnnotation = false,500);\n    }\n  }\n  /**\n   * Moves forward to the next text included in the array of the Text Service.\n   */\n  nextTextIndex() {\n    if (this.currentTextIndex < this.textsLength -1) {\n      this.currentTextIndex += 1;\n    }\n  }\n  /**\n   * Moves back to the next text included in the array of the Text Service.\n   */\n  previousTextIndex() {\n    if (this.currentTextIndex > 0) {\n      this.currentTextIndex -= 1;\n    }\n  }\n}\n","<section class=\"main-container\" [class.active]=\"postingAnnotation\">\n  <app-entities-container></app-entities-container>\n  <app-texts-container (sendSelectedText)=\"textSelection=$event\" [textIndex]=\"currentTextIndex\"></app-texts-container>\n</section>\n<footer>\n  <button mat-raised-button color=\"success\" (click) = \"postAnnotation()\" (mouseup)=\"nextTextIndex()\" [disabled]=\"textSelection === null\">\n      <mat-icon>done</mat-icon>\n  </button>\n  <button mat-raised-button color=\"navigator\" (click) = \"nextTextIndex()\" [disabled]=\"(currentTextIndex === textsLength -1)\">\n      <mat-icon>block</mat-icon>\n  </button>\n  <button mat-raised-button color=\"navigator\" (click) = \"previousTextIndex()\" [disabled]=\"currentTextIndex === 0\">\n      <mat-icon>keyboard_return</mat-icon>\n  </button>\n</footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { EntitiesContainerComponent } from './entities-container/entities-container.component';\nimport { TextsContainerComponent } from './texts-container/texts-container.component';\nimport { EntityService } from './services/entity.service';\nimport { TextService } from './services/text.service';\nimport { AnnotationService } from './services/annotation.service';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { MaterialModule } from './material';\nimport { SelectionContainerComponent } from './selection-container/selection-container.component'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EntitiesContainerComponent,\n    TextsContainerComponent,\n    SelectionContainerComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MaterialModule\n  ],\n  providers: [\n    EntityService,\n    TextService,\n    AnnotationService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { EntityService } from '../services/entity.service';\nimport { EmitEntityService } from '../services/emit-entity.service'\n\n@Component({\n  selector: 'app-entities-container',\n  templateUrl: './entities-container.component.html',\n  styleUrls: ['./entities-container.component.scss']\n})\nexport class EntitiesContainerComponent implements OnInit {\n\n  constructor(private _entityService: EntityService, private _emitEntity: EmitEntityService) { }\n\n  public entities = [];\n\n  /**\n   * Sends the entity selected to the Entity service\n   * This is received by the text container component\n   */\n  sendEntity(entity) {\n    this._emitEntity.emitEntity(entity);\n  }\n\n  ngOnInit(): void {\n    this.entities = this._entityService.getEntities();\n  }\n\n}\n","<mat-button-toggle-group name=\"entitiesGroup\" aria-label=\"Entities Group\" value=\"PERSON\" class=\"entities-group\">\n    <mat-button-toggle *ngFor=\"let entity of entities; index as i\" (click) = \"sendEntity(entity)\" [value]=\"entity\">\n        {{entity}}\n        <span>{{i + 1}}</span>\n    </mat-button-toggle>\n</mat-button-toggle-group>","import { MatButtonModule } from '@angular/material/button'\nimport { MatIconModule } from '@angular/material/icon'\nimport { MatButtonToggleModule} from '@angular/material/button-toggle'\nimport { NgModule } from '@angular/core';\n@NgModule({\n    imports: [MatButtonModule, MatIconModule, MatButtonToggleModule],\n    exports: [MatButtonModule, MatIconModule, MatButtonToggleModule]\n})\nexport class MaterialModule {}","import { Component, Output, EventEmitter } from '@angular/core';\nimport { DeselectService } from '../services/deselect.service';\n\n@Component({\n  selector: 'app-selection-container',\n  templateUrl: './selection-container.component.html',\n  styleUrls: ['./selection-container.component.scss']\n})\nexport class SelectionContainerComponent{\n\n  constructor(private _deselect: DeselectService) { }\n\n  public innerText: string;\n  public entity: String;\n\n  @Output() \n  public removeSelection = new EventEmitter<boolean>();\n\n  /**\n   * Emits the action to restore the text\n   */\n  deselectText(): void {\n    this._deselect.emitAction(true);\n  }\n\n}\n","<span class=\"selection-container\">\n    <mat-icon matChipRemove (click) = \"deselectText()\">cancel</mat-icon>\n    {{ innerText }}\n    <span class=\"selection-entity\">{{entity}}<span>\n</span>\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject, Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AnnotationService {\n\n  private annotationData: JSON[];\n  private observableAnnotations: BehaviorSubject<Array<JSON>>;\n\n  constructor() {\n    this.annotationData = new Array<JSON>();\n    this.observableAnnotations = <BehaviorSubject<Array<JSON>>>new BehaviorSubject([]);\n  }\n \n  /**\n   * Simulates the getter of Annotations\n   * @returns JSON\n   */\n  getAnnotations(): Observable<JSON[]> {\n    return this.observableAnnotations.asObservable();\n  }\n\n  /**\n   * Pushs the new annotation data into the annotationData Array\n   * Simulates the posting method to a serve (console.log)\n   */\n  postAnnotation(newAnnotation: JSON): void {\n    this.annotationData.push(newAnnotation)\n    this.observableAnnotations.next(Object.assign({}, this.annotationData));\n    console.log(\"Annotation Data\",this.annotationData);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeselectService {\n\n  private _actionSource = new Subject<boolean>();\n  action$ = this._actionSource.asObservable();\n\n  constructor() { }\n   /**\n   * Emits the action observed\n   */\n  emitAction(action: boolean) {\n    this._actionSource.next(action);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmitEntityService {\n\n  private _entitySource = new Subject<String>();\n  entity$ = this._entitySource.asObservable();\n\n  constructor() { }\n\n   /**\n   * Emits the Entity observed\n   */\n  emitEntity(entity: string) {\n    this._entitySource.next(entity);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EntityService {\n\n  constructor() { }\n\n  /**\n   * Simulates the getter of Entities\n   * @returns Array\n   */\n  getEntities() {\n    return [\n      'ORG', 'PRODUCT', 'DATE', 'GPE', 'EVENT', 'TIME', 'LOC', 'PERSON'\n    ];\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TextService {\n\n  constructor() { }\n\n  /**\n   * Simulates the getter of Texts\n   * @returns Array\n   */\n  getTexts() {\n    return [\n      {'text': \"Steve Jobs: He Brought the Show to Business\", 'source': 'The New York Times', 'doc_id': 0},\n      {'text': \"Silicon Valley's Youth Problem\", 'source': 'The New York Times', 'doc_id': 0}\n    ];\n  }\n}\n","import { Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  Renderer2,\n  Injector,\n  ComponentFactoryResolver,\n  ApplicationRef \n} from '@angular/core';\nimport { TextService } from '../services/text.service';\nimport { EmitEntityService } from '../services/emit-entity.service'\nimport { DeselectService } from '../services/deselect.service'\nimport { SelectionContainerComponent } from \"../selection-container/selection-container.component\";\n\n@Component({\n  selector: 'app-texts-container',\n  templateUrl: './texts-container.component.html',\n  styleUrls: ['./texts-container.component.scss']\n})\nexport class TextsContainerComponent implements OnInit {\n\n  constructor(\n    private _textService: TextService,\n    private _emitEntityService: EmitEntityService,\n    private _deselectService: DeselectService,\n    private renderer: Renderer2,\n    private injector: Injector,\n    private cfr: ComponentFactoryResolver,\n    private applicationRef: ApplicationRef\n  ) { }\n\n  public selectedText = {};\n  public texts = [];\n  public currentText = {'text': \"\", 'source': '', 'doc_id': null};\n  public currentEntity: String = \"PERSON\";\n  public changes: { range: Range; content: Node }[] = [];\n  public activeSelection: boolean = false;\n  public textContainer: Element;\n  \n  @Output()\n  public sendSelectedText: EventEmitter<object> = new EventEmitter<object>();\n\n  @Input()\n  public textIndex: number;\n\n  ngOnInit(): void {\n    this.texts = this._textService.getTexts();\n    this.textContainer = document.querySelector('div.texts-container');\n    this.currentText = this.texts[0];\n    this.textContainer.textContent = this.currentText.text;\n    this._emitEntityService.entity$\n      .subscribe(\n        entity => {\n          this.currentEntity = entity;\n        }\n      );\n    this._deselectService.action$\n      .subscribe(\n        action => {\n          if (action) {\n            this.deselect();\n          }\n        }\n      );\n  }\n\n  ngOnChanges(changes) {\n    this.deselect();\n    this.currentText = this.texts[this.textIndex];\n    this.currentText ? this.textContainer.textContent = this.currentText.text : null;\n  }\n  /**\n   * Gets the selection of the text container\n   * Generates a wrapper whichs contains the text of the selection and also the current Entity\n   */\n  highlightSelection() {\n    if (!this.activeSelection) {\n      const caretPosition = window.getSelection().getRangeAt(0);\n      const range = document.createRange();\n      range.setStart(\n        caretPosition.commonAncestorContainer,\n        caretPosition.startOffset\n      );\n      range.setEnd(\n        caretPosition.commonAncestorContainer,\n        caretPosition.endOffset\n      );\n      this.selectedText = { \n        'docId': this.currentText.doc_id, \n        'annotations': [{ \n          'type': this.currentEntity,\n          'offset': {\n            'start_char': range.startOffset,\n            'end_char': range.endOffset\n          }\n        }]\n      };\n      this.emitTextSelection();\n\n      const wrap = this.renderer.createElement(\"wrapper-container\");\n      const factory = this.cfr.resolveComponentFactory<SelectionContainerComponent>(\n        SelectionContainerComponent\n      );\n      const cmp = factory.create(this.injector, [], wrap);\n\n      this.applicationRef.attachView(cmp.hostView);\n\n      const contents = range.extractContents();\n      cmp.instance.innerText = contents.textContent;\n      cmp.instance.entity = this.currentEntity;\n      this.changes.push({ range: range, content: contents.cloneNode(true) });\n\n      range.insertNode(wrap);\n      caretPosition.setStart(range.endContainer, range.endOffset);\n      caretPosition.setEnd(caretPosition.endContainer, caretPosition.endOffset);\n    }\n  }\n  /**\n   * Restores de selection to the initial state of the text.\n   */\n  deselect() {\n    if (this.activeSelection) {\n      const action = this.changes.pop();\n      const range = action.range;\n      const node = range.extractContents();\n      range.insertNode(action.content);\n      this.activeSelection = false;\n      this.selectedText = {};\n      this.currentText ? this.textContainer.textContent = this.currentText.text : null;\n    }\n  }\n  /**\n   * Sends the selection as an object to the parent\n   */\n  emitTextSelection() {\n    this.activeSelection = true;\n    this.sendSelectedText.emit(this.selectedText);\n  }\n}\n","<div  class=\"texts-container\" (mouseup)=\"highlightSelection()\"></div>\n<div class=\"source-container\">\n    <span>SOURCE: </span>\n    {{currentText.source}}\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}