{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/entities-container/entities-container.component.ts","./src/app/entities-container/entities-container.component.html","./src/app/material.ts","./src/app/selection-container/selection-container.component.ts","./src/app/selection-container/selection-container.component.html","./src/app/services/annotation.service.ts","./src/app/services/deselect.service.ts","./src/app/services/emit-entity.service.ts","./src/app/services/entity.service.ts","./src/app/services/text.service.ts","./src/app/texts-container/texts-container.component.ts","./src/app/texts-container/texts-container.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { TextService } from './services/text.service';\nimport { AnnotationService } from './services/annotation.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent implements OnInit {\n  title = 'MarceloChallengue';\n  public textsLength: number = 0;\n  public textSelection: object = null;\n  public currentTextIndex: number = 0;\n  public postingAnnotation: boolean = false;\n\n  constructor(\n    private _textService: TextService,\n    private _annotationService: AnnotationService\n  ) { }\n\n  ngOnInit(): void {\n    this.textsLength = this._textService.getTexts().length;\n  }\n  /**\n   * Sends a JSON Object wich contains the data of the text selected to the Annotation Service.\n   */\n  postAnnotation() {\n    if (this.textSelection !== null) {\n      this.postingAnnotation = true;\n      this._annotationService.postAnnotation(JSON.parse(JSON.stringify(this.textSelection)));\n      this.textSelection = null;\n      setTimeout(() => this.postingAnnotation = false,500);\n    }\n  }\n  /**\n   * Moves forward to the next text included in the array of the Text Service.\n   */\n  nextTextIndex() {\n    if (this.currentTextIndex < this.textsLength -1) {\n      this.currentTextIndex += 1;\n    }\n  }\n  /**\n   * Moves back to the next text included in the array of the Text Service.\n   */\n  previousTextIndex() {\n    if (this.currentTextIndex > 0) {\n      this.currentTextIndex -= 1;\n    }\n  }\n}\n","<section class=\"main-container\" [class.active]=\"postingAnnotation\">\n  <app-entities-container></app-entities-container>\n  <app-texts-container (sendSelectedText)=\"textSelection=$event\" [textIndex]=\"currentTextIndex\"></app-texts-container>\n</section>\n<footer>\n  <button mat-raised-button color=\"success\" (click) = \"postAnnotation()\" (mouseup)=\"nextTextIndex()\" [disabled]=\"textSelection === null\">\n      <mat-icon>done</mat-icon>\n  </button>\n  <button mat-raised-button color=\"navigator\" (click) = \"nextTextIndex()\" [disabled]=\"(currentTextIndex === textsLength -1)\">\n      <mat-icon>block</mat-icon>\n  </button>\n  <button mat-raised-button color=\"navigator\" (click) = \"previousTextIndex()\" [disabled]=\"currentTextIndex === 0\">\n      <mat-icon>keyboard_return</mat-icon>\n  </button>\n</footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { EntitiesContainerComponent } from './entities-container/entities-container.component';\nimport { TextsContainerComponent } from './texts-container/texts-container.component';\nimport { EntityService } from './services/entity.service';\nimport { TextService } from './services/text.service';\nimport { AnnotationService } from './services/annotation.service';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { MaterialModule } from './material';\nimport { SelectionContainerComponent } from './selection-container/selection-container.component'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EntitiesContainerComponent,\n    TextsContainerComponent,\n    SelectionContainerComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MaterialModule\n  ],\n  providers: [\n    EntityService,\n    TextService,\n    AnnotationService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { EntityService } from '../services/entity.service';\nimport { EmitEntityService } from '../services/emit-entity.service'\n\n@Component({\n  selector: 'app-entities-container',\n  templateUrl: './entities-container.component.html',\n  styleUrls: ['./entities-container.component.scss']\n})\nexport class EntitiesContainerComponent implements OnInit {\n\n  constructor(private _entityService: EntityService, private _emitEntity: EmitEntityService) { }\n\n  public entities = [];\n\n  /**\n   * Sends the entity selected to the Entity service\n   * This is received by the text container component\n   */\n  sendEntity(entity) {\n    this._emitEntity.emitEntity(entity);\n  }\n\n  ngOnInit(): void {\n    this.entities = this._entityService.getEntities();\n  }\n\n}\n","<mat-button-toggle-group name=\"entitiesGroup\" aria-label=\"Entities Group\" value=\"PERSON\" class=\"entities-group\">\n    <mat-button-toggle *ngFor=\"let entity of entities; index as i\" (click) = \"sendEntity(entity)\" [value]=\"entity\">\n        {{entity}}\n        <span>{{i + 1}}</span>\n    </mat-button-toggle>\n</mat-button-toggle-group>","import { MatButtonModule } from '@angular/material/button'\nimport { MatIconModule } from '@angular/material/icon'\nimport { MatButtonToggleModule} from '@angular/material/button-toggle'\nimport { NgModule } from '@angular/core';\n@NgModule({\n    imports: [MatButtonModule, MatIconModule, MatButtonToggleModule],\n    exports: [MatButtonModule, MatIconModule, MatButtonToggleModule]\n})\nexport class MaterialModule {}","import { Component, Output, EventEmitter } from '@angular/core';\nimport { DeselectService } from '../services/deselect.service';\n\n@Component({\n  selector: 'app-selection-container',\n  templateUrl: './selection-container.component.html',\n  styleUrls: ['./selection-container.component.scss']\n})\nexport class SelectionContainerComponent{\n\n  constructor(private _deselect: DeselectService) { }\n\n  public innerText: string;\n  public entity: String;\n\n  @Output() \n  public removeSelection = new EventEmitter<boolean>();\n\n  /**\n   * Emits the action to restore the text\n   */\n  deselectText(): void {\n    this._deselect.emitAction(true);\n  }\n\n}\n","<span class=\"selection-container\">\n    <mat-icon matChipRemove (click) = \"deselectText()\">cancel</mat-icon>\n    {{ innerText }}\n    <span class=\"selection-entity\">{{entity}}<span>\n</span>\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject, Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AnnotationService {\n\n  private annotationData: JSON[];\n  private observableAnnotations: BehaviorSubject<Array<JSON>>;\n\n  constructor() {\n    this.annotationData = new Array<JSON>();\n    this.observableAnnotations = <BehaviorSubject<Array<JSON>>>new BehaviorSubject([]);\n  }\n \n  /**\n   * Simulates the getter of Annotations\n   * @returns JSON\n   */\n  getAnnotations(): Observable<JSON[]> {\n    return this.observableAnnotations.asObservable();\n  }\n\n  /**\n   * Pushs the new annotation data into the annotationData Array\n   * Simulates the posting method to a serve (console.log)\n   */\n  postAnnotation(newAnnotation: JSON): void {\n    this.annotationData.push(newAnnotation)\n    this.observableAnnotations.next(Object.assign({}, this.annotationData));\n    console.log(\"Annotation Data\",this.annotationData);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeselectService {\n\n  private _actionSource = new Subject<boolean>();\n  action$ = this._actionSource.asObservable();\n\n  constructor() { }\n   /**\n   * Emits the action observed\n   */\n  emitAction(action: boolean) {\n    this._actionSource.next(action);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmitEntityService {\n\n  private _entitySource = new Subject<String>();\n  entity$ = this._entitySource.asObservable();\n\n  constructor() { }\n\n   /**\n   * Emits the Entity observed\n   */\n  emitEntity(entity: string) {\n    this._entitySource.next(entity);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EntityService {\n\n  constructor() { }\n\n  /**\n   * Simulates the getter of Entities\n   * @returns Array\n   */\n  getEntities() {\n    return [\n      'ORG', 'PRODUCT', 'DATE', 'GPE', 'EVENT', 'TIME', 'LOC', 'PERSON'\n    ];\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TextService {\n\n  constructor() { }\n\n  /**\n   * Simulates the getter of Texts\n   * @returns Array\n   */\n  getTexts() {\n    return [\n      {'text': \"Steve Jobs: He Brought the Show to Business\", 'source': 'The New York Times', 'doc_id': 0},\n      {'text': \"Silicon Valley's Youth Problem\", 'source': 'The New York Times', 'doc_id': 0}\n    ];\n  }\n}\n","import { Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  Renderer2,\n  Injector,\n  ComponentFactoryResolver,\n  ApplicationRef \n} from '@angular/core';\nimport { TextService } from '../services/text.service';\nimport { EmitEntityService } from '../services/emit-entity.service'\nimport { DeselectService } from '../services/deselect.service'\nimport { SelectionContainerComponent } from \"../selection-container/selection-container.component\";\n\n@Component({\n  selector: 'app-texts-container',\n  templateUrl: './texts-container.component.html',\n  styleUrls: ['./texts-container.component.scss']\n})\nexport class TextsContainerComponent implements OnInit {\n\n  constructor(\n    private _textService: TextService,\n    private _emitEntityService: EmitEntityService,\n    private _deselectService: DeselectService,\n    private renderer: Renderer2,\n    private injector: Injector,\n    private cfr: ComponentFactoryResolver,\n    private applicationRef: ApplicationRef\n  ) { }\n\n  public selectedText = {};\n  public texts = [];\n  public currentText = {'text': \"\", 'source': '', 'doc_id': null};\n  public currentEntity: String = \"PERSON\";\n  public changes: { range: Range; content: Node }[] = [];\n  public activeSelection: boolean = false;\n  public textContainer: Element;\n  \n  @Output()\n  public sendSelectedText: EventEmitter<object> = new EventEmitter<object>();\n\n  @Input()\n  public textIndex: number;\n\n  ngOnInit(): void {\n    this.texts = this._textService.getTexts();\n    this.textContainer = document.querySelector('div.texts-container');\n    this.currentText = this.texts[0];\n    this.textContainer.textContent = this.currentText.text;\n    this._emitEntityService.entity$\n      .subscribe(\n        entity => {\n          this.currentEntity = entity;\n        }\n      );\n    this._deselectService.action$\n      .subscribe(\n        action => {\n          if (action) {\n            this.deselect();\n          }\n        }\n      );\n  }\n\n  ngOnChanges(changes) {\n    this.deselect();\n    this.currentText = this.texts[this.textIndex];\n    this.currentText ? this.textContainer.textContent = this.currentText.text : null;\n  }\n  /**\n   * Gets the selection of the text container\n   * Generates a wrapper whichs contains the text of the selection and also the current Entity\n   */\n  highlightSelection() {\n    if (!this.activeSelection) {\n      const caretPosition = window.getSelection().getRangeAt(0);\n      const range = document.createRange();\n      range.setStart(\n        caretPosition.commonAncestorContainer,\n        caretPosition.startOffset\n      );\n      range.setEnd(\n        caretPosition.commonAncestorContainer,\n        caretPosition.endOffset\n      );\n      this.selectedText = { \n        'docId': this.currentText.doc_id, \n        'annotations': [{ \n          'type': this.currentEntity,\n          'offset': {\n            'start_char': range.startOffset,\n            'end_char': range.endOffset\n          }\n        }]\n      };\n      this.emitTextSelection();\n\n      const wrap = this.renderer.createElement(\"wrapper-container\");\n      const factory = this.cfr.resolveComponentFactory<SelectionContainerComponent>(\n        SelectionContainerComponent\n      );\n      const cmp = factory.create(this.injector, [], wrap);\n\n      this.applicationRef.attachView(cmp.hostView);\n\n      const contents = range.extractContents();\n      cmp.instance.innerText = contents.textContent;\n      cmp.instance.entity = this.currentEntity;\n      this.changes.push({ range: range, content: contents.cloneNode(true) });\n\n      range.insertNode(wrap);\n      caretPosition.setStart(range.endContainer, range.endOffset);\n      caretPosition.setEnd(caretPosition.endContainer, caretPosition.endOffset);\n    }\n  }\n  /**\n   * Restores de selection to the initial state of the text.\n   */\n  deselect() {\n    if (this.activeSelection) {\n      const action = this.changes.pop();\n      const range = action.range;\n      const node = range.extractContents();\n      range.insertNode(action.content);\n      this.activeSelection = false;\n      this.selectedText = {};\n      this.currentText ? this.textContainer.textContent = this.currentText.text : null;\n    }\n  }\n  /**\n   * Sends the selection as an object to the parent\n   */\n  emitTextSelection() {\n    this.activeSelection = true;\n    this.sendSelectedText.emit(this.selectedText);\n  }\n}\n","<div  class=\"texts-container\" (mouseup)=\"highlightSelection()\"></div>\n<div class=\"source-container\">\n    <span>SOURCE: </span>\n    {{currentText.source}}\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}